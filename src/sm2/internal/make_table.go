// Copyright 2021 bilibili. All rights reserved. Author: Guo, Weiji guoweiji@bilibili.com
// 哔哩哔哩版权所有 2021。作者：郭伟基 guoweiji@bilibili.com

//go:build ignore

package main

import "fmt"

func main() {
	writeSm2Table()
}


func writeSm2Table() {
	const fileHeader = `// Copyright 2021 bilibili. All rights reserved. Author: Guo, Weiji guoweiji@bilibili.com
// 哔哩哔哩版权所有 2021。作者：郭伟基 guoweiji@bilibili.com
//
// This file is generated by make_table.go.
// Base point pre computation
// --------------------------
//
// 256 = log_2(64) x 3 x 14 + 4
// We split 256 bits into two tables: the first table serves the upper 252 bits 
// (left most), and the second table serves the lower 4 bits (right most).
//
// The first table is organized in 3 sub-tables of 63 points, with first one looks
// what follows, in which G* = [16]G:
//
// index | bits    | point
// ------+---------+------------------------------
//     1 | 0 0 0 0 0 1 | [1]G*
//     2 | 0 0 0 0 1 0 | [2^42]G*
// ...
//    63 | 1 1 1 1 1 1 | [2^210 + 2^168 + 2^126 + 2^84 + 2^42 + 1]G*
// ------+---------+------------------------------
// The second sub table is the elements in the first multiplied by 2^14.
// The third sub table, by 2^28
//
// The second table contains 15 elements, that is, G, 2G, ..., 15G. 
//
// All table elements should be accessed in constant time and in a 
// fashion that leaks no caching information.

package internal

import "smgo/sm2/internal/fiat"

const sm2PrecomputedBaseMultiples fiat.SM2Element[4][63][2] = `

	fmt.Print(fileHeader)


}