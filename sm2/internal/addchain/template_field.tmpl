// Copyright 2021 bilibili. All rights reserved. Author: Guo, Weiji guoweiji@bilibili.com
// 哔哩哔哩版权所有 2021。作者：郭伟基 guoweiji@bilibili.com
// 代码为使用addchain工具自动生成，勿编辑
//    addchain search "2^256 - 2^224 - 2^96 + 2^64 - 1 - 2" >sm2_field.ac
//    addchain gen -tmpl template_field.tmpl sm2_field.ac > ../fiat/addchain_sm2_64_field_inverse.go
//
// addchain项目的网络地址为：https://github.com/mmcloughlin/addchain
//
// 背景介绍：
// 素域求逆问题，在考虑安全性的时候，为了避免算法运行时间泄漏私钥信息（例如，SM2的签名算法要求计算d ^ -1），有一种常数时间算法是利用费马小定理：
//    a ^ (p-1) = 1 mod p  其中 a 不是 p 的倍数，而 p 为素数
// 可以得知：
//    a ^ (p-2) 为 a 在 Fp上的乘法逆元。
// 在计算SM2的标量域（mod n）的时候，由于n是固定的，因此可以通过一个对n较为优化的addition chain分解，给出优化的模指数算法去计算 a ^ (n - 2)
// 而addchain (addition chain) 工具能够计算给定素数的较优化的连加链
//
// 相对于通常的EEA算法（一般在大整数类里面实现，无针对性优化），使用费马小定理求逆的代价大约是EEA的两倍。
// 参考: Computing Multiplicative Inverses in GFp (1969, by George E. Collins)
//
// 叠加addchain优化后，可能缩小一部分差距，大约在20% ～ 30%左右。
//
// 具体性能对比需要运行测试

package fiat

// Invert an element in the SM2 curve field (mod p).
// Output: z = 1/x mod (SM2 p) if x != 0, and 0 otherwise
func sm2FermatInvert_FiatAC(z *sm2MontgomeryDomainFieldElement, x *sm2MontgomeryDomainFieldElement)  {
	//
	{{- range lines (format .Script) }}
	//	{{ . }}
	{{- end }}
	//
	// Operations: {{ .Ops.Doubles }} squares {{ .Ops.Adds }} multiplies
	//
	// Generated by {{ .Meta.Module }} {{ .Meta.ReleaseTag }}.

	// Allocate Temporaries.
		var (
			{{- range .Program.Temporaries }}
			{{ . }} = new(sm2MontgomeryDomainFieldElement)
			{{- end -}}
		)

		{{ range $i := .Program.Instructions }}
		// {{ printf "Step %d: %s = x^%#x" $i.Output.Index $i.Output (index $.Chain $i.Output.Index) }}
		{{- with add $i.Op }}
		sm2Mul({{ $i.Output }}, {{ .X }}, {{ .Y }})
		{{ end -}}

		{{- with double $i.Op }}
		sm2Square({{ $i.Output }}, {{ .X }})
		{{ end -}}

		{{- with shift $i.Op -}}
		{{- $first := 0 -}}
		{{- if ne $i.Output.Identifier .X.Identifier }}
		sm2Square({{ $i.Output }}, {{ .X }})
		{{- $first = 1 -}}
		{{- end }}
		for s := {{ $first }}; s < {{ .S }}; s++ {
			sm2Square({{ $i.Output }}, {{ $i.Output }})
		}
		{{ end -}}
		{{- end }}
	}
